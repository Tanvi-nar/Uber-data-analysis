{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\miniproject\\\\frontend\\\\src\\\\components\\\\Charts.js\";\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, Title, PointElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, Title, PointElement);\nconst Charts = ({\n  data\n}) => {\n  const renderBarChart = (title, chartData) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n  const renderLineChart = (title, chartData) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  const buildChartData = (label, dataset, isMonthChart = false) => {\n    const monthOrder = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const labels = isMonthChart ? monthOrder.filter(month => month in dataset) : Object.keys(dataset);\n    return {\n      labels,\n      datasets: [{\n        label,\n        data: labels.map(label => dataset[label]),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n        tension: 0.4\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Dataset shape:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this), \" \", data.shape[0], \" rows \\xD7 \", data.shape[1], \" columns\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), renderBarChart('Category Distribution', buildChartData('Categories', data.category_counts)), renderBarChart('Purpose Distribution', buildChartData('Purpose', data.purpose_counts)), renderBarChart('Day-Night Distribution', buildChartData('Day-Night', data.day_night_counts)), renderBarChart('Trips per Weekday', buildChartData('Weekdays', data.day_counts)), renderLineChart('Monthly Trip Count', buildChartData('Monthly Trips', data.monthly_trip_counts, true)), renderLineChart('Monthly Max Miles', buildChartData('Max Miles/Month', data.monthly_max_miles, true))]\n  }, void 0, true);\n};\n_c = Charts;\nexport default Charts;\n\n// import React from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\n\n// ChartJS.register(CategoryScale, LinearScale, BarElement, Title);\n\n// const Charts = ({ data }) => {\n//   const barData = {\n//     labels: Object.keys(data.category_counts),\n//     datasets: [{\n//       label: 'Category Counts',\n//       data: Object.values(data.category_counts),\n//       backgroundColor: 'rgba(75, 192, 192, 0.6)'\n//     }]\n//   };\n\n//   return (\n//     <div>\n//       <h3>Ride Category Distribution</h3>\n//       <Bar data={barData} />\n//     </div>\n//   );\n// };\n\n// export default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","Bar","Line","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","Title","PointElement","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Charts","data","renderBarChart","title","chartData","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","renderLineChart","buildChartData","label","dataset","isMonthChart","monthOrder","labels","filter","month","Object","keys","datasets","map","backgroundColor","borderColor","borderWidth","tension","shape","category_counts","purpose_counts","day_night_counts","day_counts","monthly_trip_counts","monthly_max_miles","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/miniproject/frontend/src/components/Charts.js"],"sourcesContent":["import React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, Title, PointElement } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, Title, PointElement);\n\nconst Charts = ({ data }) => {\n  const renderBarChart = (title, chartData) => (\n    <div style={{ marginBottom: '40px' }}>\n      <h3>{title}</h3>\n      <Bar data={chartData} />\n    </div>\n  );\n\n  const renderLineChart = (title, chartData) => (\n    <div style={{ marginBottom: '40px' }}>\n      <h3>{title}</h3>\n      <Line data={chartData} />\n    </div>\n  );\n\n  const buildChartData = (label, dataset, isMonthChart = false) => {\n    const monthOrder = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n                        'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  \n    const labels = isMonthChart\n      ? monthOrder.filter(month => month in dataset)\n      : Object.keys(dataset);\n  \n    return {\n      labels,\n      datasets: [{\n        label,\n        data: labels.map(label => dataset[label]),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n        tension: 0.4\n      }]\n    };\n  };\n  \n\n  return (\n    <>\n      <p><strong>Dataset shape:</strong> {data.shape[0]} rows Ã— {data.shape[1]} columns</p>\n      {renderBarChart('Category Distribution', buildChartData('Categories', data.category_counts))}\n      {renderBarChart('Purpose Distribution', buildChartData('Purpose', data.purpose_counts))}\n      {renderBarChart('Day-Night Distribution', buildChartData('Day-Night', data.day_night_counts))}\n      {renderBarChart('Trips per Weekday', buildChartData('Weekdays', data.day_counts))}\n      {renderLineChart('Monthly Trip Count', buildChartData('Monthly Trips', data.monthly_trip_counts, true))}\n      {renderLineChart('Monthly Max Miles', buildChartData('Max Miles/Month', data.monthly_max_miles, true))}\n\n    </>\n  );\n};\n\nexport default Charts;\n\n// import React from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\n\n// ChartJS.register(CategoryScale, LinearScale, BarElement, Title);\n\n// const Charts = ({ data }) => {\n//   const barData = {\n//     labels: Object.keys(data.category_counts),\n//     datasets: [{\n//       label: 'Category Counts',\n//       data: Object.values(data.category_counts),\n//       backgroundColor: 'rgba(75, 192, 192, 0.6)'\n//     }]\n//   };\n\n//   return (\n//     <div>\n//       <h3>Ride Category Distribution</h3>\n//       <Bar data={barData} />\n//     </div>\n//   );\n// };\n\n// export default Charts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}